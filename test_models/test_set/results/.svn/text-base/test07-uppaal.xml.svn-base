<?xml version="1.0" ?><nta><declaration>chan init_Main;
chan init_xor1;
chan enter_xor1_via_UNNAMED3_in_Main;
chan exit_xor1;
chan exit_xor2;
chan enter_xor2_via_UNNAMED2_in_xor1;
int [0,1] exit_UNNAMED5_ready = 0;
int [0,1] exit_UNNAMED4_ready = 0;
</declaration><template><name>Global_Kickoff</name><location id="xor1_vertex"><name>xor1_vertex</name><label kind="invariant">true</label><committed/></location><location id="end"><name>end</name><label kind="invariant">true</label></location><location id="Main_vertex"><name>Main_vertex</name><label kind="invariant">true</label><committed/></location><init ref="Main_vertex"/><transition><source ref="Main_vertex"/><target ref="xor1_vertex"/><label kind="synchronisation">init_Main!</label></transition><transition><source ref="xor1_vertex"/><target ref="end"/><label kind="synchronisation">init_xor1!</label></transition></template><template><name>Main_process</name><location id="Main_aux_xor1_UNNAMED3"><name>Main_aux_xor1_UNNAMED3</name><label kind="invariant">true</label><committed/></location><location id="xor1_active_in_Main"><name>xor1_active_in_Main</name><label kind="invariant">true</label><committed/></location><location id="Main_idle"><name>Main_idle</name><label kind="invariant">true</label><committed/></location><location id="exit_cascade_UNNAMED5_1_1"><name>exit_cascade_UNNAMED5_1_1</name><label kind="invariant">true</label><committed/></location><location id="exit_cascade_UNNAMED5_2_1"><name>exit_cascade_UNNAMED5_2_1</name><label kind="invariant">true</label><committed/></location><location id="exit_cascade_UNNAMED5_1_2"><name>exit_cascade_UNNAMED5_1_2</name><label kind="invariant">true</label><committed/></location><init ref="Main_idle"/><transition><source ref="Main_idle"/><target ref="xor1_active_in_Main"/><label kind="synchronisation">init_Main?</label></transition><transition><source ref="Main_aux_xor1_UNNAMED3"/><target ref="xor1_active_in_Main"/><label kind="synchronisation">enter_xor1_via_UNNAMED3_in_Main!</label></transition><transition><source ref="xor1_active_in_Main"/><target ref="exit_cascade_UNNAMED5_1_1"/><label kind="guard">exit_UNNAMED5_ready == 1 &amp;&amp; exit_UNNAMED4_ready == 1</label></transition><transition><source ref="exit_cascade_UNNAMED5_1_1"/><target ref="exit_cascade_UNNAMED5_1_2"/><label kind="synchronisation">exit_xor1!</label></transition><transition><source ref="exit_cascade_UNNAMED5_1_2"/><target ref="Main_aux_xor1_UNNAMED3"/><label kind="synchronisation">exit_xor2!</label></transition><transition><source ref="xor1_active_in_Main"/><target ref="exit_cascade_UNNAMED5_2_1"/><label kind="guard">exit_UNNAMED5_ready == 1</label></transition><transition><source ref="exit_cascade_UNNAMED5_2_1"/><target ref="Main_aux_xor1_UNNAMED3"/><label kind="synchronisation">exit_xor1!</label></transition></template><template><name>xor1_process</name><location id="xor1_aux_xor2_UNNAMED2"><name>xor1_aux_xor2_UNNAMED2</name><label kind="invariant">true</label><committed/></location><location id="xor2_active_in_xor1"><name>xor2_active_in_xor1</name><label kind="invariant">true</label><committed/></location><location id="xor1_idle"><name>xor1_idle</name><label kind="invariant">true</label><committed/></location><location id="xor1_s1_active_in_xor1"><name>xor1_s1_active_in_xor1</name><label kind="invariant">true</label><committed/></location><init ref="xor1_idle"/><transition><source ref="xor1_idle"/><target ref="xor1_s1_active_in_xor1"/><label kind="synchronisation">init_xor1?</label><label kind="assignment">exit_UNNAMED5_ready := 1</label></transition><transition><source ref="xor1_aux_xor2_UNNAMED2"/><target ref="xor2_active_in_xor1"/><label kind="synchronisation">enter_xor2_via_UNNAMED2_in_xor1!</label></transition><transition><source ref="xor1_idle"/><target ref="xor1_s1_active_in_xor1"/><label kind="synchronisation">enter_xor1_via_UNNAMED3_in_Main?</label><label kind="assignment">exit_UNNAMED5_ready := 1</label></transition><transition><source ref="xor1_s1_active_in_xor1"/><target ref="xor1_idle"/><label kind="synchronisation">exit_xor1?</label><label kind="assignment">exit_UNNAMED5_ready := 0</label></transition><transition><source ref="xor2_active_in_xor1"/><target ref="xor1_idle"/><label kind="synchronisation">exit_xor1?</label></transition></template><template><name>xor2_process</name><location id="xor2_idle"><name>xor2_idle</name><label kind="invariant">true</label><committed/></location><location id="xor2_s1_active_in_xor2"><name>xor2_s1_active_in_xor2</name><label kind="invariant">true</label><committed/></location><init ref="xor2_idle"/><transition><source ref="xor2_idle"/><target ref="xor2_s1_active_in_xor2"/><label kind="synchronisation">enter_xor2_via_UNNAMED2_in_xor1?</label><label kind="assignment">exit_UNNAMED4_ready := 1</label></transition><transition><source ref="xor2_s1_active_in_xor2"/><target ref="xor2_idle"/><label kind="synchronisation">exit_xor2?</label><label kind="assignment">exit_UNNAMED4_ready := 0</label></transition></template><system>Global_Kickoff_proc = Global_Kickoff();
Main_process_proc = Main_process();
xor1_process_proc = xor1_process();
xor2_process_proc = xor2_process();
system Global_Kickoff_proc, Main_process_proc, xor1_process_proc, xor2_process_proc;
</system></nta>